<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>flyer的博客</title>
    <link>https://pengfeierzhang-hub.github.io/</link>
    <description>Recent content on flyer的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://pengfeierzhang-hub.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>bean装载的方式</title>
      <link>https://pengfeierzhang-hub.github.io/post/bean%E7%9A%84%E8%A3%85%E8%BD%BD/</link>
      <pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pengfeierzhang-hub.github.io/post/bean%E7%9A%84%E8%A3%85%E8%BD%BD/</guid>
      <description>将bean进行注册到spring容器中的三种方式 创建一个bean即一个简单的Java对象实体类，或者认为是将一个bean装配到IOC容器中，</description>
    </item>
    
    <item>
      <title>volatile关键字</title>
      <link>https://pengfeierzhang-hub.github.io/post/spring/java%E7%9A%84volatile/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pengfeierzhang-hub.github.io/post/spring/java%E7%9A%84volatile/</guid>
      <description>请讲述下volatile关键字 他是轻量的synchronized 在多处理其开发中保证了共享变量的可见性 可见性就是当一个线程进行修改一个共享变</description>
    </item>
    
    <item>
      <title>二分查找的模板代码</title>
      <link>https://pengfeierzhang-hub.github.io/post/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pengfeierzhang-hub.github.io/post/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid>
      <description>问题定义：如何不死记二分的写法 以下的讨论都是基于问题的解是存在的前提下。 场景一：在一个有序的数组中寻找某个下标使得其对应的值等于某个指定的t</description>
    </item>
    
    <item>
      <title>深度搜索的思想</title>
      <link>https://pengfeierzhang-hub.github.io/post/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%B7%B1%E5%BA%A6%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pengfeierzhang-hub.github.io/post/%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%B7%B1%E5%BA%A6%E6%90%9C%E7%B4%A2/</guid>
      <description>深度搜索问题的代码模板 对于if的判定条件，如果判定过程比较复杂的话，要封装成isOk()k函数，一般来说深度搜索的问题，关键点在于isOk函</description>
    </item>
    
    <item>
      <title>滑动窗口的技巧解题</title>
      <link>https://pengfeierzhang-hub.github.io/post/slide_window/</link>
      <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://pengfeierzhang-hub.github.io/post/slide_window/</guid>
      <description>什么是滑动窗口？ 滑动窗口在算法题中的应用主要是依靠双指针来实现。在滑动窗口类型的问题中都会有两个指针。一个用于延伸现有窗口的 right指针，</description>
    </item>
    
  </channel>
</rss>